#pragma once

#include <SDL2/SDL.h>

namespace Shade {

    // This needs a better solution if we allow non-SDL windowing
    enum class KeyCode : uint16_t
    {
        SHADE_KEY_A = SDL_SCANCODE_A,
        SHADE_KEY_B = SDL_SCANCODE_B,
        SHADE_KEY_C = SDL_SCANCODE_C,
        SHADE_KEY_D = SDL_SCANCODE_D,
        SHADE_KEY_E = SDL_SCANCODE_E,
        SHADE_KEY_F = SDL_SCANCODE_F,
        SHADE_KEY_G = SDL_SCANCODE_G,
        SHADE_KEY_H = SDL_SCANCODE_H,
        SHADE_KEY_I = SDL_SCANCODE_I,
        SHADE_KEY_J = SDL_SCANCODE_J,
        SHADE_KEY_K = SDL_SCANCODE_K,
        SHADE_KEY_L = SDL_SCANCODE_L,
        SHADE_KEY_M = SDL_SCANCODE_M,
        SHADE_KEY_N = SDL_SCANCODE_N,
        SHADE_KEY_O = SDL_SCANCODE_O,
        SHADE_KEY_P = SDL_SCANCODE_P,
        SHADE_KEY_Q = SDL_SCANCODE_Q,
        SHADE_KEY_R = SDL_SCANCODE_R,
        SHADE_KEY_S = SDL_SCANCODE_S,
        SHADE_KEY_T = SDL_SCANCODE_T,
        SHADE_KEY_U = SDL_SCANCODE_U,
        SHADE_KEY_V = SDL_SCANCODE_V,
        SHADE_KEY_W = SDL_SCANCODE_W,
        SHADE_KEY_X = SDL_SCANCODE_X,
        SHADE_KEY_Y = SDL_SCANCODE_Y,
        SHADE_KEY_Z = SDL_SCANCODE_Z,

        SHADE_KEY_SPACE = SDL_SCANCODE_SPACE,
        SHADE_KEY_LSHIFT = SDL_SCANCODE_LSHIFT,
        SHADE_KEY_LCONTROL = SDL_SCANCODE_LCTRL,
        SHADE_KEY_LALT = SDL_SCANCODE_LALT,

        SHADE_KEY_UP = SDL_SCANCODE_UP,
        SHADE_KEY_DOWN = SDL_SCANCODE_DOWN,
        SHADE_KEY_LEFT = SDL_SCANCODE_LEFT,
        SHADE_KEY_RIGHT = SDL_SCANCODE_RIGHT
    };

}